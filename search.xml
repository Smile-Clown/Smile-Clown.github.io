<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JSP学习(不间断更新)</title>
    <url>/2020/03/25/JSP%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="JSP笔记-知识点"><a href="#JSP笔记-知识点" class="headerlink" title="JSP笔记(知识点)"></a>JSP笔记(知识点)</h1><h3 id="基础部分"><a href="#基础部分" class="headerlink" title="基础部分"></a>基础部分</h3><h6 id="JSP九大内置对象"><a href="#JSP九大内置对象" class="headerlink" title="JSP九大内置对象:"></a>JSP九大内置对象:</h6><ol>
<li><blockquote>
<p>out：输出对象，像客户端输出内容。</p>
</blockquote>
</li>
<li><blockquote>
<p>request：请求对象；存储“客户端向服务端发送的请求信息” </p>
<p>  /*</p>
<p>   request对象的常用方法：</p>
<p>   &emsp;&emsp;1、getParameter(String name) :根据请求的字段名(name的值)，返回字段值(value的值)(String类型);</p>
<p>   &emsp;&emsp;2、getParameterValues(String name) :返回的是String类型数组(String []),通常用与CheckBox;</p>
<p>   &emsp;&emsp;3、setCharacterEncoding(“填写编码格式 例：UTF-8”) :(返回值为Void)，设置post方式的请求编码，不设置即发送默认编码(Tomcat7之前为iso-8859-7,Tomcat8以后为utf-8);</p>
<p>   &emsp;&emsp;4、getRequestDispatcher(“某某.jsp”).forward(request,response) :请求转发的方式跳转页面   从当前页面跳转到  某某.jsp;</p>
<p>   &emsp;&emsp;5、getServerContext() :获取项目的ServletContext对象</p>
<p>  */</p>
<blockquote>
<h6 id="例子1-1：注册-register-jsp-amp-show-jsp-用register-jsp注册然后show-jsp展示出来"><a href="#例子1-1：注册-register-jsp-amp-show-jsp-用register-jsp注册然后show-jsp展示出来" class="headerlink" title="例子1-1：注册(register.jsp &amp; show.jsp):用register.jsp注册然后show.jsp展示出来"></a>例子1-1：注册(register.jsp &amp; show.jsp):用register.jsp注册然后show.jsp展示出来</h6><p>   “<a href="http://localhost:8080/JavaWeb/JavaWeb/1-1/show.jsp?uname=admin&amp;upwd=123&amp;uage=21&amp;uhobbies=%E7%AF%AE%E7%90%83”" target="_blank" rel="noopener">http://localhost:8080/JavaWeb/JavaWeb/1-1/show.jsp?uname=admin&amp;upwd=123&amp;uage=21&amp;uhobbies=%E7%AF%AE%E7%90%83”</a>  </p>
<pre><code>连接端口号/           文件             ?  参数名1=参数值1 &amp; 参数名2=参数值2 &amp; 参数名3=参数值3  </code></pre><p>   get提交方式：method=”get” 和 上面这个地址栏、超链接(“&lt;”a href = “xxx””&gt;”) 请求方式 默认都属于get提交方式。  </p>
<p>   get和post请求方式的区别：<br>   &emsp;&emsp;a. get方式 在地址栏显示 请求信息(但是地址栏 容纳的 信息 有限 ，4–5KB;) ; post 不会显示<br>   &emsp;&emsp;b. 文件上传操作必须是post  </p>
<p>   &emsp;&emsp;通常推荐使用：post方式  </p>
<p>   统一请求的编码 request  &emsp;&emsp;&emsp;拓展（Tomcat7默认编码（iso-8859-1），Tomcat8以上默认为（utf-8）） </p>
<p>   get方式请求，如果出现乱码，解决方法：     </p>
<p>   &emsp;&emsp;a. 统一每一个变量的编码(比较傻，一个一个变量改)<br>   &emsp;&emsp;xxx = new String(旧编码，新编码);<br>   &emsp;&emsp;name = new String(name.getBytes(“iso-8859-1”),”utf-8”);  </p>
<p>   &emsp;&emsp;b. 修改server.xml，一次性的 更改tomcat默认get提交方式的编码。   </p>
<p>   Post方式请求，如果出现乱码，解决方法：</p>
<p>   &emsp;&emsp;request.setCharacterEncoding(“utf-8);  </p>
</blockquote>
</blockquote>
</li>
<li><blockquote>
<p>response：响应对象;<br>/*<br> 提供的方法：<br> &emsp;&emsp;1、void addCookie( Cookie cookie ); ：服务端向客户端增加一个Cookie对象<br> &emsp;&emsp;2、void sendRedirect(“a.jsp”) throw IOException; ：页面跳转的一种方式 （重定向）<br> &emsp;&emsp;3、void setContentType( String type ); ：设置服务端响应的编码（设置服务端的ContentType类型）<br>*/  </p>
<blockquote>
<h6 id="例子1-2：登录-login-jsp-–-gt-check-jsp-–-gt-success-jsp"><a href="#例子1-2：登录-login-jsp-–-gt-check-jsp-–-gt-success-jsp" class="headerlink" title="例子1-2：登录(login.jsp –&gt; check.jsp –&gt; success.jsp)"></a>例子1-2：登录(login.jsp –&gt; check.jsp –&gt; success.jsp)</h6><h6 id="请求转发、重定向区别"><a href="#请求转发、重定向区别" class="headerlink" title="请求转发、重定向区别"></a>请求转发、重定向区别</h6><p>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;请求转发&emsp;&emsp;&emsp;&emsp;重定向<br>地址栏是否改变&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;不变&emsp;&emsp;&emsp;&emsp;&emsp;改变<br>是否保留第一次请求时的数据&emsp;&emsp;&emsp;&emsp;保留&emsp;&emsp;&emsp;&emsp;&emsp;不保留<br>请求的次数&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;1&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;2<br>跳转发生的位置&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;服务端&emsp;&emsp;&emsp;&emsp;&emsp;客户端    </p>
</blockquote>
</blockquote>
</li>
<li><blockquote>
<p>session(存在于服务端)<br>Cookie(存在于客户端，不是内置对象)：Cookie是由 服务端 产生的，再发给客户端保存  </p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>计算机语言</category>
      </categories>
      <tags>
        <tag>JSP</tag>
      </tags>
  </entry>
  <entry>
    <title>批处理语法整理(不间断更新)</title>
    <url>/2020/02/19/%E6%89%B9%E5%A4%84%E7%90%86%E8%AF%AD%E6%B3%95%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h2 id="1、echo-和"><a href="#1、echo-和" class="headerlink" title="1、echo 和 @"></a>1、echo 和 @</h2><ul>
<li>@ ：隐藏后面这一行的命令本身（只影响当前行）</li>
<li>echo off ：屏蔽执行过程</li>
<li>echo. ：空一行</li>
<li>echo 任意代码：输出任意代码</li>
</ul>
<h2 id="2、-title"><a href="#2、-title" class="headerlink" title="2、 title"></a>2、 title</h2><ul>
<li>title ：设置cmd窗口的标题</li>
</ul>
<h2 id="3、pause-暂停命令"><a href="#3、pause-暂停命令" class="headerlink" title="3、pause 暂停命令"></a>3、pause 暂停命令</h2><ul>
<li>pause ： 使批处理暂停</li>
</ul>
<h2 id="4、-goto跳转-和-标签区域"><a href="#4、-goto跳转-和-标签区域" class="headerlink" title="4、 goto跳转 和 标签区域"></a>4、 goto跳转 和 标签区域</h2><ul>
<li>goto label ： 跳转到label区域</li>
<li>:label ： 表示下面代码属于label标签区域。</li>
</ul>
<h2 id="5、set-设置变量"><a href="#5、set-设置变量" class="headerlink" title="5、set 设置变量"></a>5、set 设置变量</h2><ul>
<li>set 变量名 = 变量值</li>
<li>echo = %变量名%： 引用变量 </li>
<li>/P 命令行开关允许将变量数值设成用户输入的一行输入</li>
<li>/A 命令行开关指定等号右边的字符串为被评估的数字表达式</li>
</ul>
<p>例：</p>
<pre><code>set /p p=请输入    
set /a rrr=%p%+3
echo %rrr%

请输入5
8</code></pre><ul>
<li>变量在if 、for 复合语句里是一次性全部替换的，可以启用“延缓环境变量扩充”，用！来引用变量，即  ！变量名！</li>
</ul>
<p>例：</p>
<pre><code>SETLOCAL ENABLEDELAYEDEXPANSION
set p=aaa
if %p%==aaa (
    echo %p%
    set p=bbb
    echo %p%
    echo !p!
)      
echo %p%
ENDLOCAL</code></pre><ul>
<li>if 语句</li>
</ul>
<p>例：</p>
<pre><code>set /p p=请输入
if %p% LEQ 9 (
echo %p%
) else (
echo 9
)</code></pre><p>&nbsp;中文含义&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关系符&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;英文解释</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;等于&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;equ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;equal</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;大于&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gtr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;greater than</p>
<p>&nbsp;大于等于&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;greater than or equal</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;小于&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lss&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;less than</p>
<p>&nbsp;小于等于&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;less than or equal</p>
<p>&nbsp;&nbsp;&nbsp;不等于&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;neq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no equal</p>
<p>判断路径是否存在：</p>
<pre><code>if exist %cd%\test.LOG (
    echo 存在！
)

if not exist %cd%\test.LOG (
echo 不存在！
)</code></pre>]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>批处理</tag>
      </tags>
  </entry>
</search>
